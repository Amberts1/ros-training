#+TITLE: Week 3
#+AUTHOR: Jason Gibson
#+EMAIL: jgibson37@gatech.edu

* What are we doing today?
- Encoders
- launch files
- Gazebo
    - urdf
- PID

* Encoders
#+BEGIN_NOTES
keep it high level
#+END_NOTES
- used to determine the speed of a spinning wheel
- 2 main types
    - optical
    - magnetic

* Optical Encoders
- uses a light and a glass wheel to measure ticks
- Things to watch out for
    - sensitive to dust
    - broken disks
- TODO Picture

* Magnetic Encoders
- uses magnets to measure ticks
- generally low accuracy (lower tick count)
- requires occasional tuning
- TODO pciture

* Launch Files
#+BEGIN_NOTES
mention how it can be more human understandable. Just a shorthand for rosrun
#+END_NOTES
- XML files
- a way to launch multiple ros nodes with parameters
- recursive

* Commandline
#+BEGIN_SRC shell
roslaunch [PACKAGE_NAME] FILE_NAME.launch
#+END_SRC

* Why Launch Files
TODO example of rosrun with lots of parameters vs launch file

* Structure
- everything is encompassed in the launch tag
#+BEGIN_SRC XML
<launch>
    <!-- here -->
</launch>
#+END_SRC

* Valid Tags
#+BEGIN_NOTES
mention that these are the tags the go under the launch tag
#+END_NOTES
| tag | usage |
|-------+------|
| =node= | launches a node |
| =param= | sets up a parameter for that node|
| =remap= | remap a topic name to something else |
| =rosparam= | enables the use of YAML files for setting lots of parameters |
| =include= | includes and launches other roslaunch files |
| =env= | specify and environment variable |
| =arg= | sets a variable that can be used in the rest of the launch file |
| =group= | allows you to group nodes in a single launch file |

* <node>
| tag | usage |
|-------+------|
| =name= | the name of the node |
| =pkg= | the package that the node is in |
| =type= | ?????? |
| =args= | arguements to pass to node |
#+BEGIN_SRC XML
<launch>
    <node name="NODE_NAME" pkg="PKG_NAME" type="NODE_TYPE" .../>

    <node name="NODE_NAME" pkg="PKG_NAME" type="NODE_TYPE">
        <!-- tags local to this node -->
    </node>
</launch>
#+END_SRC

* <param>
| tag | usage |
|-------+------|
| =name= | the name of the parameter |
| =type= | the variable type |
| =value= | the value of the parameter |
#+BEGIN_SRC XML
<launch>
    <param name="PARAM_NAME" type="VAR_TYPE" value="VALUE">
</launch>
#+END_SRC

* Substitution Arguements
- $(env ENV_VAR)
    - will set the value from environment variable
    - will fail if ENV_VAR is not set
- $(opentv ENV_VAR default_value)
    - will set the value from environment variable if set
    - will set default if ENV_VAR is not defined
- $(find PKG_NAME)
    - used for relative paths to files in packages
- $(arg ARG_NAME)
    - will set to ARG_NAME if it is defined in file

* Useful Commandline Arguements
| option | effect |
|-------+------|
| =--screen= | force node output to screen |
| =--dump-params= | print parameters in yaml format|
| =--nodes= | prints the nodes launched by this launch file|
| =--args= | prints the command line arguements set in launch file|


* Usage
#+BEGIN_NOTES
make sure to mention tab complete
#+END_NOTES
