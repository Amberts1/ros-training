#+TITLE: Week 1
#+AUTHOR: Jason Gibson
#+EMAIL: jgibson37@gatech.edu
# content heavily borrowed from robocup-training

* What are we doing today?
- Introductions
- IGVC and RoboRacing Competitions
- Setting up the IGVC/RoboRacing VM
- Introduction to ROS

* ROS Training
#+BEGIN_NOTES
talk about RoboJackets is one team and how training is a shared venture
#+END_NOTES
- IGVC and RoboRacing software use similiar tech stacks
  - C++
  - Robot Operating System
  - OpenCV

* Developing for IGVC/RoboRacing
#+BEGIN_NOTES
Downloading will take a while so make sure everyone does this now.
Check for anyone with a dual boot already.
#+END_NOTES
- we use Ubuntu 16.04
- we have a VM image that we have aready set up for you
  - [[https://mega.nz/#!kgFCyC5Y!lETW_2hufOsqxEOUrnjVFD538FvI3qXBLXWiBm9X_xI][Download Link]] (http://bit.ly/2c61Fkx)
- virtualbox is a virtualization software that robojackets supports
  - [[https://www.virtualbox.org/wiki/Downloads][Virtual Box]]

* Ros Training Trainers
#+BEGIN_NOTES
Be sure to mention joint training is called ROS training
#+END_NOTES

* Meet Jason
#+ATTR_HTML: :width 15%
[[file:https://i.imgur.com/izC5WWA.jpg]]
- Jason Gibson
  - Junior, Computer Science (Threads: Devices, Intelligence)
  - Inside RoboJackets: Training Chair, IGVC Software Lead
  - Outside RoboJackets: Avid lover of dad jokes
- How to contact me
  - Slack: [[https://robojackets.slack.com/messages/@jasongibson/][@jasongibson]]
  - Email: [[mailto:jgibson37@gatech.edu][jgibson37@gatech.edu]]

* Meet Sahit
#+ATTR_HTML: :width 20%
[[file:https://i.imgur.com/aqKGrKm.jpg]]
- Sahit Chintalapudi
  - Sophomore, Computer Science (Threads: Intelligence, Theory)
  - Roboracing Software Lead & Roboracing PR manager
  - S-tier Taylor Swift fanboy
- How to contact me
  - Slack: [[https://robojackets.slack.com/messages/@schintalapudi/][@schintalapudi]]
  - Email: [[mailto:schintalapudi@gatech.edu][schintalapudi@gatech.edu]]

* IGVC
#+BEGIN_NOTES
Talk a little bit about what the competition is like
#+END_NOTES
- Intelligent Ground Vehicle Competition
- an autonomous navigation competition
- [[http://www.igvc.org][Competition Website]]
#+ATTR_HTML: :width 20%
[[file:https://i.imgur.com/40QJ9g9.jpg]]

* Sensors
#+BEGIN_NOTES
briefly mention what each sensor is
#+END_NOTES
- GPS
- lidar
- camera
- IMU
- encoders

* IGVC Software
#+BEGIN_NOTES
mention ROS is an industrial standard
#+END_NOTES
- c++ based
- our software can be broken down into three parts
  - path planning
  - obstacle detection
    - lidar
    - computer vision
  - mapping and localization
- all the details will be covered in later weeks

* RoboRacing
- International Autonomous Robot Racing Competition (Waterloo, Canada)
- Autonomous Vehicle Competition (Denver, Colorado)
- Both are autonomous racing competitions
- Same sensors as IGVC but *no GPS*
#+ATTR_HTML: :width 20%
[[file:https://i.imgur.com/8s99LgL.jpg]]

* RoboRacing Software
- Consists of a few packages, but at a high level we have: vision, planning,
  and control.
- the IARRC package and AVC packages contain competition specific logic
  (perception)
- common has our path planner which is common between both events
- platform consists of controls code that interfaces with the arduino
- gazebo has the software that supports simulation

* ROS
- message passing interface
- multitude of useful libraries

* ROS Architecture
#+BEGIN_NOTES
the arrows are topics and the circles are nodes
#+END_NOTES
- nodes
  - small programs that are all running at the same time
- topics
  - messages that are passed between different nodes
#+ATTR_HTML: :width 60%
[[file:https://magiccvs.byu.edu/wiki/images/b/bb/Rqt_graph_turtle_key.png]]

[[file:https://i.imgur.com/0cdXQXW.png]]
* Fork Our Repo
- RoboJackets/igvc-software (https://github.com/RoboJackets/igvc-software)
- RoboJackets/roboracing-software (https://github.com/RoboJackets/roboracing-software)
#+ATTR_HTML: :width 60%
[[file:https://i.imgur.com/9Wz6RP3.png]]

*** Ensure you have Virtualization turned on in your BIOS
 - [[http://www.howtogeek.com/213795/how-to-enable-intel-vt-x-in-your-computers-bios-or-uefi-firmware/][This]] is a simple guide of how to do this.
 - While this is not 100% necessary, it will make your VM much faster.
 - On a Windows host, you may need to turn off Hyper-V as well.

*** 1. Go to =File->Import Appliance=
      [[file:https://i.imgur.com/keQmMy4.png]]

*** 2. Select the =.box= file you extracted earlier
      [[file:https://i.imgur.com/3S2Pgt3.png]]

*** 3. Increase the Amount of Memory and CPU's
      - Increase the Memory/CPU to your computer's specs. Don't allocate too much memory/cpus!
      [[file:https://i.imgur.com/P8Adm2a.png]]

*** 4. Hit =Import=!

*** Configure Settings of Imported Image
*** 1. Right click your new virtualbox entry, and hit =settings=
*** 2. Increase the Amount of Video RAM, and turn on 3D Acceleration
      - If you do not have virtualization, virtualbox may not allow you to turn on 3D Acceleration
      [[file:https://i.imgur.com/YzmNmcM.png]]
*** 3. Turn *OFF* =Remote Display=
      [[file:https://i.imgur.com/cvigW2G.png]]

*** Boot your new VM
 - Double Click the Entry, or Right Click -> Start -> Normal Start

* Build Our Code
- open a terminal
#+BEGIN_SRC shell
cd catkin_ws
catkin_make
#+END_SRC

* Run Our Code
#+BEGIN_NOTES
tell them about tab complete
#+END_NOTES
- open terminator
#+BEGIN_SRC shell
cd Downloads
rosbag play -l demo.bag
#+END_SRC
- split terminator
#+BEGIN_SRC shell
roslaunch igvc simulation.launch
#+END_SRC
- split terminator
#+BEGIN_SRC shell
rviz
#+END_SRC

* rviz
#+BEGIN_NOTES
show them how to visualize things in rviz. Explain major topics. Use Gazebo. Both teams. Show rqt_graph have them do it also.
#+END_NOTES
- a visualization tool that works well for ROS
  - we are seeing messages our robot is sending
